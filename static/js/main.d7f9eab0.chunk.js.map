{"version":3,"sources":["constants/const-text.ts","constants/const-color.ts","constants/useTranslator.ts","mod-language_menu/LanguageMenu.tsx","mod-divider/Divider.tsx","page-calculation/component/ItemSubject.tsx","page-calculation/component/styles.ts","page-calculation/component/ItemTask.tsx","page-calculation/component/DialogNewSubject.tsx","page-calculation/component/DialogNewTask.tsx","mod-flexible_list/component/ListRow.tsx","mod-flexible_list/component/ListHeader.tsx","mod-flexible_list/FlexibleList.tsx","mod-alert_dialog/AlertDialog.tsx","page-calculation/fragment/ColumnSubject.tsx","page-calculation/fragment/ColumnTask.tsx","page-calculation/fragment/styles.ts","page-calculation/fragment/ColumnResult.tsx","page-calculation/PageCalculation.tsx","page-main/PageMain.tsx","App.tsx","reportWebVitals.ts","index.tsx","redux-components/actions/types.ts","redux-components/index.ts","redux-components/store/index.ts","redux-components/selectors/index.ts","redux-components/reducers/setLanguageReducer.ts","redux-components/reducers/setPageReducer.ts","redux-components/reducers/modifySubjectsReducer.ts","redux-components/reducers/index.ts","redux-components/reducers/counterReducer.ts","redux-components/reducers/isLoggedReducer.ts"],"names":["CONST_TEXT","ILanguage","EN","BUTTON","CALCULATION","TERM","HISTORY","LANGUAGE","DIALOG","TITLE_ADD_SUBJECT","TEXT_FIELD_LABEL_SUBJECT","TEXT_FIELD_DEFAULT_SUBJECT","TITLE_ADD_ITEM","TEXT_FIELD_LABEL_ITEM_NAME","TEXT_FIELD_LABEL_POINTS","TEXT_FIELD_LABEL_FULL_POINTS","TEXT_FIELD_LABEL_WEIGHT","BUTTON_SAVE","BUTTON_CANCEL","LANGUAGE_LABEL","LANGUAGE_LIST_LABELS","CN_SI","CN_TR","JP","ALERT_BUTTON_OK","ALERT_MESSAGE_CONFIRM_DELETE","ALERT_MESSAGE_SAVE_RESULT_TO_HISTORY","ALERT_MESSAGE_SELECT_AT_LEAST_ONE_FOLDER","ALERT_MESSAGE_SELECT_AT_LEAST_ONE_ITEM_TO_DELETE","ALERT_MESSAGE_SELECT_AT_LEAST_ONE_SUBJECT","CALCULATION_ITEM_LABEL_FULL_POINTS","CALCULATION_ITEM_LABEL_POINTS","CALCULATION_ITEM_LABEL_WEIGHT","MESSAGE_NO_TASK_TO_SHOW","MESSAGE_NO_SUBJECT_SELECTED","MESSAGE_NO_RESULT_TO_SHOW","TEXT_TOTAL","TEXT_HIGHEST_POSSIBLE","TEXT_POINTS_LOSG","TEXT_RESULT_UNDER","TEXT_RESULT_OVER","TEXT_RESULT_OK","TEXT_RESULT","CONST_COLOR","RED","YELLOW","GREEN","useTranslator","langT","useLanguageSelector","colorT","LanguageMenu","text","useState","anchorEl","setAnchorEl","menuItems","Object","values","map","value","index","MenuItem","onClick","lang","dispatch","type","SetLanguageTypes","SET_LANGUAGE","style","display","Button","variant","aria-controls","aria-haspopup","event","currentTarget","Menu","id","keepMounted","open","Boolean","onClose","Divider","height","background","ItemSubject","title","flexDirection","padding","paddingLeft","paddingTop","paddingBottom","RowItemTask","styled","div","RowItemTitle","ItemTask","points","fullPoints","weight","String","length","substring","DialogNewSubject","openDialog","closeDialog","subjectIndex","curTitle","useSubjectTitleSelector","dialogInputNewSubject","setDialogInputNewSubject","useEffect","handleClose","Dialog","aria-labelledby","undefined","DialogTitle","DialogContent","TextField","autoFocus","required","margin","label","fullWidth","onChange","target","DialogActions","color","SubjectActionTypes","MODIFY_SUBJECT","newTitle","ADD_SUBJECT","items","DialogNewTask","taskIndex","curTask","itemName","itemPoints","itemFullPoints","itemWeight","useTaskSelector","newItemName","setNewItemName","toString","newItemPoints","setNewItemPoints","newItemFullPoints","setNewItemFullPoints","newItemWeight","setNewItemWeight","console","log","MODIFY_ITEM","itemIndex","newItem","parseFloat","ADD_ITEM","item","ListRow","rowContent","editMode","changeColorOnMouseHover","width","doSelectOnEditMode","onSelect","onLongClick","onToggleChecked","checked","setChecked","setColor","setCheckedWrapper","onDoubleClick","justifyContent","Checkbox","onMouseEnter","onMouseLeave","ListHeader","setEditMode","onAddItem","onDeleteItem","AddButton","IconButton","DeleteButton","onEditButtonClick","EditButton","Buttons","fontSize","fontWeight","marginTop","FlexibleList","props","hasEditMode","changeColorOnHover","elements","checkedIndex","setCheckedIndex","newState","push","filter","element","headerData","rowData","header","rows","AlertDialog","message","okButtonLabel","cancelButtonLabel","onSave","DialogContentText","ColumnSubject","setSelectedIndex","editIndex","setEditIndex","openEditSubject","setOpenEditSubject","openNewSubjectDialog","setOpenNewSubjectDialog","openSubjectAlertDialog","setOpenSubjectAlertDialog","openConfirmDeleteDialog","setOpenConfirmDeleteDialog","subjectTitles","useSubjectTitlesSelector","itemSubjects","paddingRight","selectedIndex","REMOVE_SUBJECT","ColumnTask","setOpenDialog","openModifyDialog","setOpenModifyDialog","openSelectedNothing","setOpenSelectedNothing","openDeleteConfirmation","setOpenDeleteConfirmation","modifyIndex","setModifyIndex","itemTasksData","useSubjectSelector","itemTasks","columnContent","indexList","REMOVE_ITEM","emptyPage","ResultItemBlock","ResultItemTitle","ResultItemData","ResultWeight","ColumnResult","subject","adjustLength","data","rawSubjectResult","reduce","acc","totalWeight","weightAchieved","highestPossible","percentageLost","textAlign","resultPage","marginBottom","PageCalculation","PageMain","setPage","page","SetPageTypes","SET_PAGE","IPage","children","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","decrement","ChangeValueTypes","Decrement","store","subscribe","getState","Increment","LoggedTypes","SIGN_IN","SIGN_OUT","ReactDOM","render","StrictMode","document","getElementById","createStore","combinedReducers","window","__REDUX_DEVTOOLS_EXTENSION__","action","useSelector","state","language","subjects","initialState","combineReducers","oldState","isLogged","actionValue","sort","a","b","forEach","splice"],"mappings":"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","file":"static/js/main.d7f9eab0.chunk.js","sourcesContent":["import { ILanguage } from \"../redux-components\";\n\ninterface ITranslation {\n    BUTTON: {\n        CALCULATION: string,\n        TERM: string,\n        HISTORY: string,\n        LANGUAGE: string,\n    },\n    DIALOG: {\n        TITLE_ADD_SUBJECT: string,\n        TEXT_FIELD_LABEL_SUBJECT: string,\n        TEXT_FIELD_DEFAULT_SUBJECT: string,\n        TITLE_ADD_ITEM: string,\n        TEXT_FIELD_LABEL_ITEM_NAME: string,\n        TEXT_FIELD_LABEL_POINTS: string,\n        TEXT_FIELD_LABEL_FULL_POINTS: string,\n        TEXT_FIELD_LABEL_WEIGHT: string,\n        BUTTON_SAVE: string,\n        BUTTON_CANCEL: string,\n    },\n    LANGUAGE_LABEL: string,\n    LANGUAGE_LIST_LABELS: { [key in ILanguage]: string },\n    ALERT_BUTTON_OK: string,\n    ALERT_MESSAGE_CONFIRM_DELETE: string,\n    ALERT_MESSAGE_SAVE_RESULT_TO_HISTORY: string,\n    ALERT_MESSAGE_SELECT_AT_LEAST_ONE_FOLDER: string,\n    ALERT_MESSAGE_SELECT_AT_LEAST_ONE_ITEM_TO_DELETE: string,\n    ALERT_MESSAGE_SELECT_AT_LEAST_ONE_SUBJECT: string,\n    CALCULATION_ITEM_LABEL_FULL_POINTS: string,\n    CALCULATION_ITEM_LABEL_POINTS: string,\n    CALCULATION_ITEM_LABEL_WEIGHT: string,\n    MESSAGE_NO_TASK_TO_SHOW: string,\n    MESSAGE_NO_SUBJECT_SELECTED: string,\n    MESSAGE_NO_RESULT_TO_SHOW: string,\n    TEXT_TOTAL: string,\n    TEXT_HIGHEST_POSSIBLE: string,\n    TEXT_POINTS_LOSG: string,\n    TEXT_RESULT_UNDER: string,\n    TEXT_RESULT_OVER: string,\n    TEXT_RESULT_OK: string,\n    TEXT_RESULT: string,\n};\n\nexport const CONST_TEXT: { [key in ILanguage]: ITranslation } = {\n    [ILanguage.EN]: {\n        BUTTON: {\n            CALCULATION: \"Calculation\",\n            TERM: \"Term\",\n            HISTORY: \"History\",\n            LANGUAGE: \"Language\",\n        },\n        DIALOG: {\n            TITLE_ADD_SUBJECT: \"New Subject\",\n            TEXT_FIELD_LABEL_SUBJECT: \"Subject\",\n            TEXT_FIELD_DEFAULT_SUBJECT: \"Not Named\",\n            TITLE_ADD_ITEM: \"New Item\",\n            TEXT_FIELD_LABEL_ITEM_NAME: \"Item Name\",\n            TEXT_FIELD_LABEL_POINTS: \"Points\",\n            TEXT_FIELD_LABEL_FULL_POINTS: \"Full Points\",\n            TEXT_FIELD_LABEL_WEIGHT: \"Weight\",\n            BUTTON_SAVE: \"Save\",\n            BUTTON_CANCEL: \"Cancel\",\n        },\n        LANGUAGE_LABEL: \"English\",\n        LANGUAGE_LIST_LABELS: {\n            [ILanguage.EN]: \"English\",\n            [ILanguage.CN_SI]: \"Chinese (Simplified)\",\n            [ILanguage.CN_TR]: \"Chinese (Traditional)\",\n            [ILanguage.JP]: \"Japanese\",\n        },\n        ALERT_BUTTON_OK: \"OK\",\n        ALERT_MESSAGE_CONFIRM_DELETE: \"Are you sure to delete selected items?\",\n        ALERT_MESSAGE_SAVE_RESULT_TO_HISTORY: \"Would you like to save the result to history page?\",\n        ALERT_MESSAGE_SELECT_AT_LEAST_ONE_FOLDER: \"Please select at least one folder to save to\",\n        ALERT_MESSAGE_SELECT_AT_LEAST_ONE_ITEM_TO_DELETE: \"Please select at least one item to delete\",\n        ALERT_MESSAGE_SELECT_AT_LEAST_ONE_SUBJECT: \"Please select at least one subject to save\",\n        CALCULATION_ITEM_LABEL_FULL_POINTS: \"Full Points: \",\n        CALCULATION_ITEM_LABEL_POINTS: \"Points: \",\n        CALCULATION_ITEM_LABEL_WEIGHT: \"Weight: \",\n        MESSAGE_NO_TASK_TO_SHOW: \"NO ITEM TO DISPLAY\",\n        MESSAGE_NO_SUBJECT_SELECTED: \"NO SUBJECT SELECTED\",\n        MESSAGE_NO_RESULT_TO_SHOW: \"NO RESULT TO SHOW\",\n        TEXT_TOTAL: \"Total\",\n        TEXT_HIGHEST_POSSIBLE: \"Highest Possible\",\n        TEXT_POINTS_LOSG: \"Percentage Lost\",\n        TEXT_RESULT_UNDER: \"The total percentage is under 100%\",\n        TEXT_RESULT_OVER: \"The total percentage is over 100%\",\n        TEXT_RESULT_OK: \"The total percentage is 100%\",\n        TEXT_RESULT: \"Result\",\n    },\n    [ILanguage.CN_SI]: {\n        BUTTON: {\n            CALCULATION: \"计算\",\n            TERM: \"学期\",\n            HISTORY: \"历史\",\n            LANGUAGE: \"语言\",\n        },\n        DIALOG: {\n            TITLE_ADD_SUBJECT: \"添加科目\",\n            TEXT_FIELD_LABEL_SUBJECT: \"科目\",\n            TEXT_FIELD_DEFAULT_SUBJECT: \"未命名\",\n            TITLE_ADD_ITEM: \"添加项目\",\n            TEXT_FIELD_LABEL_ITEM_NAME: \"项目名称\",\n            TEXT_FIELD_LABEL_POINTS: \"得分\",\n            TEXT_FIELD_LABEL_FULL_POINTS: \"满分\",\n            TEXT_FIELD_LABEL_WEIGHT: \"权重\",\n            BUTTON_SAVE: \"保存\",\n            BUTTON_CANCEL: \"取消\",\n        },\n        LANGUAGE_LABEL: \"简体中文\",\n        LANGUAGE_LIST_LABELS: {\n            [ILanguage.EN]: \"英语\",\n            [ILanguage.CN_SI]: \"简体中文\",\n            [ILanguage.CN_TR]: \"繁体中文\",\n            [ILanguage.JP]: \"日语\",\n        },\n        ALERT_BUTTON_OK: \"知道了\",\n        ALERT_MESSAGE_CONFIRM_DELETE: \"确定要删除选中的项目吗？\",\n        ALERT_MESSAGE_SAVE_RESULT_TO_HISTORY: \"是否将此次计算结果保存至历史？\",\n        ALERT_MESSAGE_SELECT_AT_LEAST_ONE_FOLDER: \"请选择至少一个文件夹\",\n        ALERT_MESSAGE_SELECT_AT_LEAST_ONE_ITEM_TO_DELETE: \"请选择至少一个要删除的项目\",\n        ALERT_MESSAGE_SELECT_AT_LEAST_ONE_SUBJECT: \"请选择至少一个要保存科目\",\n        CALCULATION_ITEM_LABEL_FULL_POINTS: \"满分：\",\n        CALCULATION_ITEM_LABEL_POINTS: \"得分：\",\n        CALCULATION_ITEM_LABEL_WEIGHT: \"权重：\",\n        MESSAGE_NO_TASK_TO_SHOW: \"没有可以展示的项目\",\n        MESSAGE_NO_SUBJECT_SELECTED: \"没有选中的科目\",\n        MESSAGE_NO_RESULT_TO_SHOW: \"没有刻意显示的结果\",\n        TEXT_TOTAL: \"总分\",\n        TEXT_HIGHEST_POSSIBLE: \"最高可能分\",\n        TEXT_POINTS_LOSG: \"失分\",\n        TEXT_RESULT_UNDER: \"权重总和低于100%\",\n        TEXT_RESULT_OVER: \"权重总和高于100%\",\n        TEXT_RESULT_OK: \"权重总和为100%\",\n        TEXT_RESULT: \"结果\",\n    },\n    [ILanguage.CN_TR]: {\n        BUTTON: {\n            CALCULATION: \"計算\",\n            TERM: \"學期\",\n            HISTORY: \"歷史\",\n            LANGUAGE: \"語言\",\n        },\n        DIALOG: {\n            TITLE_ADD_SUBJECT: \"添加科目\",\n            TEXT_FIELD_LABEL_SUBJECT: \"科目\",\n            TEXT_FIELD_DEFAULT_SUBJECT: \"未命名\",\n            TITLE_ADD_ITEM: \"添加項目\",\n            TEXT_FIELD_LABEL_ITEM_NAME: \"項目名\",\n            TEXT_FIELD_LABEL_POINTS: \"得分\",\n            TEXT_FIELD_LABEL_FULL_POINTS: \"滿分\",\n            TEXT_FIELD_LABEL_WEIGHT: \"權重\",\n            BUTTON_SAVE: \"保存\",\n            BUTTON_CANCEL: \"取消\",\n        },\n        LANGUAGE_LABEL: \"繁體中文\",\n        LANGUAGE_LIST_LABELS: {\n            [ILanguage.EN]: \"英語\",\n            [ILanguage.CN_SI]: \"簡體中文\",\n            [ILanguage.CN_TR]: \"繁體中文\",\n            [ILanguage.JP]: \"日語\",\n        },\n        ALERT_BUTTON_OK: \"知道了\",\n        ALERT_MESSAGE_CONFIRM_DELETE: \"確定要刪除選中的項目嗎？\",\n        ALERT_MESSAGE_SAVE_RESULT_TO_HISTORY: \"是否將此次計算結果保存之歷史？\",\n        ALERT_MESSAGE_SELECT_AT_LEAST_ONE_FOLDER: \"請選擇至少一個文件夾\",\n        ALERT_MESSAGE_SELECT_AT_LEAST_ONE_ITEM_TO_DELETE: \"請選擇至少一個要刪除的項目\",\n        ALERT_MESSAGE_SELECT_AT_LEAST_ONE_SUBJECT: \"請選擇至少一個要刪除的科目\",\n        CALCULATION_ITEM_LABEL_FULL_POINTS: \"滿分：\",\n        CALCULATION_ITEM_LABEL_POINTS: \"得分：\",\n        CALCULATION_ITEM_LABEL_WEIGHT: \"權重：\",\n        MESSAGE_NO_TASK_TO_SHOW: \"沒有可以展示的項目\",\n        MESSAGE_NO_SUBJECT_SELECTED: \"沒有選中的科目\",\n        MESSAGE_NO_RESULT_TO_SHOW: \"沒有可以展示的結果\",\n        TEXT_TOTAL: \"總分\",\n        TEXT_HIGHEST_POSSIBLE: \"最高可能分\",\n        TEXT_POINTS_LOSG: \"失分\",\n        TEXT_RESULT_UNDER: \"權重總和低於100%\",\n        TEXT_RESULT_OVER: \"權重總和高於100%\",\n        TEXT_RESULT_OK: \"權重總和為100%\",\n        TEXT_RESULT: \"結果\",\n    },\n    [ILanguage.JP]: {\n        BUTTON: {\n            CALCULATION: \"計算\",\n            TERM: \"学期\",\n            HISTORY: \"歴史\",\n            LANGUAGE: \"言語\",\n        },\n        DIALOG: {\n            TITLE_ADD_SUBJECT: \"新規科目\",\n            TEXT_FIELD_LABEL_SUBJECT: \"科目\",\n            TEXT_FIELD_DEFAULT_SUBJECT: \"名前なし\",\n            TITLE_ADD_ITEM: \"新規項目\",\n            TEXT_FIELD_LABEL_ITEM_NAME: \"名前\",\n            TEXT_FIELD_LABEL_POINTS: \"点数\",\n            TEXT_FIELD_LABEL_FULL_POINTS: \"満点\",\n            TEXT_FIELD_LABEL_WEIGHT: \"パーセンテージ\",\n            BUTTON_SAVE: \"保存\",\n            BUTTON_CANCEL: \"キャンセル\",\n        },\n        LANGUAGE_LABEL: \"日本語\",\n        LANGUAGE_LIST_LABELS: {\n            [ILanguage.EN]: \"英語\",\n            [ILanguage.CN_SI]: \"中国語（簡体字）\",\n            [ILanguage.CN_TR]: \"中国語（繁体字）\",\n            [ILanguage.JP]: \"日本語\",\n        },\n        ALERT_BUTTON_OK: \"分かりました\",\n        ALERT_MESSAGE_CONFIRM_DELETE: \"選んだアイテームを消しますか？\",\n        ALERT_MESSAGE_SAVE_RESULT_TO_HISTORY: \"計算結果を履歴ページに保存しますか？\",\n        ALERT_MESSAGE_SELECT_AT_LEAST_ONE_FOLDER: \"保存にしたいファイルを選んでください\",\n        ALERT_MESSAGE_SELECT_AT_LEAST_ONE_ITEM_TO_DELETE: \"消したいアイテームを選んでください\",\n        ALERT_MESSAGE_SELECT_AT_LEAST_ONE_SUBJECT: \"保存したい科目を選んでください\",\n        CALCULATION_ITEM_LABEL_FULL_POINTS: \"満点：\",\n        CALCULATION_ITEM_LABEL_POINTS: \"点数：\",\n        CALCULATION_ITEM_LABEL_WEIGHT: \"パーセンテージ: \",\n        MESSAGE_NO_TASK_TO_SHOW: \"展示られる項目がありません\",\n        MESSAGE_NO_SUBJECT_SELECTED: \"選んだ科目がありません\",\n        MESSAGE_NO_RESULT_TO_SHOW: \"展示られる結果がありません\",\n        TEXT_TOTAL: \"合計\",\n        TEXT_HIGHEST_POSSIBLE: \"最高可能点数\",\n        TEXT_POINTS_LOSG: \"失った点数\",\n        TEXT_RESULT_UNDER: \"現在の合計パーセンテージは100%以下\",\n        TEXT_RESULT_OVER: \"現在の合計パーセンテージは100%以上\",\n        TEXT_RESULT_OK: \"現在の合計パーセンテージは 100%\",\n        TEXT_RESULT: \"結果\",\n    },\n}\n","\nexport interface IColor {\n    RED: string,\n    YELLOW: string,\n    GREEN: string,\n};\n\nexport const CONST_COLOR: IColor = {\n    RED: \"#E2252B\",\n    YELLOW: \"#FEDC56\",\n    GREEN: \"#50C879\",\n}","import { CONST_TEXT } from \"./const-text\";\nimport { CONST_COLOR } from \"./const-color\";\nimport { useLanguageSelector } from \"../redux-components\";\n\nexport const useTranslator = () => {\n    return { langT: CONST_TEXT[useLanguageSelector()], colorT: CONST_COLOR }\n}","import React, { useState } from 'react';\nimport { FunctionComponent } from \"react\";\nimport { Button, Menu, MenuItem } from \"@material-ui/core\";\nimport { dispatch, ILanguage, SetLanguageTypes } from \"../redux-components\";\nimport { useTranslator } from \"../constants\";\n\ninterface ILanguageMenu {\n    text?: string;\n}\nexport const LanguageMenu: FunctionComponent<ILanguageMenu> = ({ text }) => {\n    const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n    const { langT } = useTranslator();\n\n    const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    const setLanguage = (lang: ILanguage) => () => {\n        dispatch(\n            {\n                type: SetLanguageTypes.SET_LANGUAGE,\n                value: lang,\n            }\n        );\n        setAnchorEl(null);\n    };\n\n    const menuItems = Object.values(ILanguage).map((value, index) => <MenuItem key={index} onClick={setLanguage(value)}>{langT.LANGUAGE_LIST_LABELS[value]}</MenuItem>)\n    \n    return (\n        <div style={{ display: \"flex\" }}>\n            <Button variant=\"outlined\" aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}>\n                {`${langT.BUTTON.LANGUAGE}: ${langT.LANGUAGE_LABEL}`}\n            </Button>\n            <Menu\n                id=\"simple-menu\"\n                anchorEl={anchorEl}\n                keepMounted\n                open={Boolean(anchorEl)}\n                onClose={handleClose}>\n                {menuItems}\n            </Menu>\n        </div>\n    );\n};","import { FunctionComponent } from \"react\";\n\nexport const Divider: FunctionComponent = () => {\n    return (\n        <div style={{height: 1, background: \"gray\"}}></div>\n    );\n};","import { FunctionComponent } from \"react\";\nimport { Divider } from \"../../mod-divider\";\n\nexport interface IItemSubject {\n    title: string;\n}\n\nexport const ItemSubject: FunctionComponent<IItemSubject> = ({ title }) => {\n    return (\n        <div style={{ display: \"flex\", flexDirection: \"column\", padding: 0, paddingLeft: 12 }}>\n            <div style={{ display: \"flex\", paddingTop: 12, paddingBottom: 12 }}>{title}</div>\n            <Divider/>\n        </div>\n    );\n};","import styled from \"styled-components\";\n\nexport const RowItemTask = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    padding-bottom: 4px;\n`\n\nexport const RowItemTitle = styled.div`\n    font-size: 20px;\n    font-weight: bold;\n`","import { FunctionComponent } from \"react\";\nimport { Divider } from \"../../mod-divider\";\nimport { useTranslator } from \"../../constants\";\nimport * as styled from \"./styles\";\n\nexport interface IItemTask {\n    index: number;\n    title: string;\n    points: number;\n    fullPoints: number;\n    weight: number;\n}\n\nexport const ItemTask: FunctionComponent<IItemTask> = ({ index, title, points, fullPoints, weight }) => {\n    const { langT } = useTranslator();\n\n    return (\n        <div style={{ display: \"flex\", flexDirection: \"column\", paddingTop: 4 }}>\n            <styled.RowItemTask>\n                <styled.RowItemTitle>\n                    {title}\n                </styled.RowItemTitle>\n                <styled.RowItemTitle>\n                    {`${fullPoints === 0 ? 0 : String(points/fullPoints*100).length > 5 ? String(points/fullPoints*100).substring(0, 6) : String(points/fullPoints*100) }%`}\n                </styled.RowItemTitle>\n            </styled.RowItemTask>\n            <styled.RowItemTask>\n                <div>\n                    {`${langT.CALCULATION_ITEM_LABEL_POINTS}${points}`}\n                </div>\n                <div>\n                    {fullPoints === 0 ? 0 : String(points/fullPoints*weight).length > 5 ? String(points/fullPoints*weight).substring(0, 6) : String(points/fullPoints*weight)}\n                </div>\n            </styled.RowItemTask>\n            <styled.RowItemTask>\n                <div>\n                    {`${langT.CALCULATION_ITEM_LABEL_FULL_POINTS}${fullPoints}`}\n                </div>\n            </styled.RowItemTask>\n            <styled.RowItemTask>\n                <div>\n                    {`${langT.CALCULATION_ITEM_LABEL_WEIGHT}${weight}%`}\n                </div>\n            </styled.RowItemTask>\n            <Divider/>\n        </div>\n    );\n};","import { FunctionComponent, useState, useEffect } from \"react\";\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, TextField } from \"@material-ui/core\";\nimport { useTranslator } from \"../../constants\";\nimport { dispatch, SubjectActionTypes, useSubjectTitleSelector } from \"../../redux-components\";\n\ninterface IDialogNewSubject {\n    openDialog: boolean;\n    closeDialog: () => void;\n\n    subjectIndex?: number;\n}\n\nexport const DialogNewSubject: FunctionComponent<IDialogNewSubject> = ({ openDialog, closeDialog, subjectIndex }) => {\n    const curTitle = useSubjectTitleSelector(subjectIndex ?? -1) ?? \"\";\n    const [dialogInputNewSubject, setDialogInputNewSubject] = useState<string>(curTitle);\n\n    useEffect(() => {\n        if (openDialog) {\n            setDialogInputNewSubject(curTitle);\n        }\n    }, [openDialog, curTitle]);\n\n    const { langT } = useTranslator();\n\n    const onDialogNewSubjectChange = (event: any) => {\n        setDialogInputNewSubject(event.target.value ?? \"\");\n    };\n\n    const handleClose = () => {\n        closeDialog();\n        setDialogInputNewSubject(\"\");\n    };\n\n    const handleSave = () => {\n        if (subjectIndex !== undefined) {\n            dispatch(\n                {\n                    type: SubjectActionTypes.MODIFY_SUBJECT,\n                    value: { subjectIndex, newTitle: dialogInputNewSubject === \"\" ? langT.DIALOG.TEXT_FIELD_DEFAULT_SUBJECT : dialogInputNewSubject, }\n                }\n            );\n        } else {\n            dispatch(\n                {\n                    type: SubjectActionTypes.ADD_SUBJECT,\n                    value: { title: dialogInputNewSubject === \"\" ? langT.DIALOG.TEXT_FIELD_DEFAULT_SUBJECT : dialogInputNewSubject, items: [] },\n                }\n            );\n        }\n        closeDialog();\n        setDialogInputNewSubject(\"\");\n    };\n\n    return (\n        <Dialog open={openDialog} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n            {subjectIndex !== undefined ? null : <DialogTitle id=\"form-dialog-title\">{langT.DIALOG.TITLE_ADD_SUBJECT}</DialogTitle>}\n            <DialogContent>\n                <TextField\n                    autoFocus\n                    required\n                    margin=\"dense\"\n                    id=\"standard-required\"\n                    label={langT.DIALOG.TEXT_FIELD_LABEL_SUBJECT}\n                    type=\"email\"\n                    fullWidth\n                    onChange={onDialogNewSubjectChange}\n                    value={dialogInputNewSubject}\n                />\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={handleClose} color=\"primary\"> {langT.DIALOG.BUTTON_CANCEL} </Button>\n                <Button onClick={handleSave} color=\"primary\"> {langT.DIALOG.BUTTON_SAVE} </Button>\n            </DialogActions>\n        </Dialog>\n    );\n};","import { FunctionComponent, useState, useEffect } from \"react\";\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, TextField } from \"@material-ui/core\";\nimport { useTranslator } from \"../../constants\";\nimport { dispatch, SubjectActionTypes, useTaskSelector } from \"../../redux-components\";\n\ninterface IDialogNewTask {\n    openDialog: boolean;\n    closeDialog: () => void;\n    subjectIndex: number;\n\n    taskIndex?: number;\n    itemName?: string;\n    itemPoints?: string;\n    itemFullPoints?: string;\n    itemWeight?: string;\n}\n\nexport const DialogNewTask: FunctionComponent<IDialogNewTask> = ({ openDialog, closeDialog, subjectIndex, taskIndex, itemName, itemPoints, itemFullPoints, itemWeight }) => {\n    const curTask = useTaskSelector(subjectIndex, taskIndex ?? -1);\n    const [newItemName, setNewItemName] = useState<string>(curTask ? curTask.title : \"123\");\n    const [newItemPoints, setNewItemPoints] = useState<string>(curTask ? curTask.points.toString() : \"\");\n    const [newItemFullPoints, setNewItemFullPoints] = useState<string>(curTask ? curTask.fullPoints.toString() : \"\");\n    const [newItemWeight, setNewItemWeight] = useState<string>(curTask ? curTask.weight.toString() : \"\");\n\n    useEffect(() => {\n        if (openDialog) {\n            setNewItemName(curTask ? curTask.title : \"\");\n            setNewItemPoints(curTask ? curTask.points.toString() : \"\");\n            setNewItemFullPoints(curTask ? curTask.fullPoints.toString() : \"\");\n            setNewItemWeight(curTask ? curTask.weight.toString() : \"\");\n        }\n    }, [curTask, openDialog]);\n\n    const { langT } = useTranslator();\n\n    const onNewItemNameChange = (event: any) => {\n        setNewItemName(event.target.value ?? \"\");\n    };\n    const onNewItemPointsChange = (event: any) => {\n        setNewItemPoints(event.target.value ?? \"\");\n    };\n    const onNewItemFullPointsChange = (event: any) => {\n        setNewItemFullPoints(event.target.value ?? \"\");\n    };\n    const onNewItemWeightChange = (event: any) => {\n        setNewItemWeight(event.target.value ?? \"\");\n    };\n\n    const handleClose = () => {\n        closeDialog();\n        setNewItemName(\"\");\n        setNewItemPoints(\"\");\n        setNewItemFullPoints(\"\");\n        setNewItemWeight(\"\");\n    };\n\n    const handleSave = () => {\n        console.log(\"handleSave\");\n        closeDialog();\n        if (taskIndex !== undefined) {\n            dispatch({\n                type: SubjectActionTypes.MODIFY_ITEM,\n                value: {\n                    index: subjectIndex,\n                    itemIndex: taskIndex,\n                    newItem: {\n                        title: newItemName === \"\" ? langT.DIALOG.TEXT_FIELD_DEFAULT_SUBJECT : newItemName,\n                        points: newItemPoints === \"\" ? 0 : parseFloat(newItemPoints),\n                        fullPoints: newItemFullPoints === \"\" ? 0 : parseFloat(newItemFullPoints),\n                        weight: newItemWeight === \"\" ? 0 : parseFloat(newItemWeight),\n                    },\n                }\n            });\n            console.log(taskIndex);\n            console.log(newItemName);\n            console.log(newItemPoints);\n            console.log(newItemFullPoints);\n            console.log(newItemWeight);\n        } else {\n            dispatch(\n                {\n                    type: SubjectActionTypes.ADD_ITEM,\n                    value: {\n                        index: subjectIndex,\n                        item: {\n                            title: newItemName === \"\" ? langT.DIALOG.TEXT_FIELD_DEFAULT_SUBJECT : newItemName,\n                            points: newItemPoints === \"\" ? 0 : parseFloat(newItemPoints),\n                            fullPoints: newItemFullPoints === \"\" ? 0 : parseFloat(newItemFullPoints),\n                            weight: newItemWeight === \"\" ? 0 : parseFloat(newItemWeight),\n                        },\n                    },\n                }\n            );\n        }\n        setNewItemName(\"\");\n        setNewItemPoints(\"\");\n        setNewItemFullPoints(\"\");\n        setNewItemWeight(\"\");\n    };\n\n    return (\n        <Dialog open={openDialog} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n            {taskIndex !== undefined ? null : <DialogTitle id=\"form-dialog-title\">{langT.DIALOG.TITLE_ADD_ITEM}</DialogTitle>}\n            <DialogContent>\n                <TextField\n                    autoFocus\n                    required\n                    margin=\"dense\"\n                    id=\"standard-required\"\n                    label={langT.DIALOG.TEXT_FIELD_LABEL_ITEM_NAME}\n                    type=\"email\"\n                    fullWidth\n                    onChange={onNewItemNameChange}\n                    value={newItemName}\n                />\n                <TextField\n                    autoFocus\n                    required\n                    margin=\"dense\"\n                    id=\"standard-required\"\n                    label={langT.DIALOG.TEXT_FIELD_LABEL_POINTS}\n                    type=\"email\"\n                    fullWidth\n                    onChange={onNewItemPointsChange}\n                    value={newItemPoints}\n                />\n                <TextField\n                    autoFocus\n                    required\n                    margin=\"dense\"\n                    id=\"standard-required\"\n                    label={langT.DIALOG.TEXT_FIELD_LABEL_FULL_POINTS}\n                    type=\"email\"\n                    fullWidth\n                    onChange={onNewItemFullPointsChange}\n                    value={newItemFullPoints}\n                />\n                <TextField\n                    autoFocus\n                    required\n                    margin=\"dense\"\n                    id=\"standard-required\"\n                    label={langT.DIALOG.TEXT_FIELD_LABEL_WEIGHT}\n                    type=\"email\"\n                    fullWidth\n                    onChange={onNewItemWeightChange}\n                    value={newItemWeight}\n                />\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={handleClose} color=\"primary\"> {langT.DIALOG.BUTTON_CANCEL} </Button>\n                <Button onClick={handleSave} color=\"primary\"> {langT.DIALOG.BUTTON_SAVE} </Button>\n            </DialogActions>\n        </Dialog>\n    );\n};","import { FunctionComponent, useState, useEffect } from \"react\";\n// import { ListCheckbox } from \"./ListCheckbox\";\nimport { Checkbox } from \"@material-ui/core\";\n\nexport interface IListRow {\n    rowContent: JSX.Element;\n    editMode: boolean;\n    changeColorOnMouseHover: boolean;\n    width: number;\n    doSelectOnEditMode: boolean;\n    onSelect: () => void;\n    onLongClick: () => void;\n    onToggleChecked: (target: boolean) => void;\n}\n\nexport const ListRow: FunctionComponent<IListRow> = ({ rowContent, editMode, changeColorOnMouseHover, width, doSelectOnEditMode, onSelect, onLongClick, onToggleChecked }) => {\n    const [checked, setChecked] = useState<boolean>(false);\n    const [color, setColor] = useState<string>(\"white\");\n\n    useEffect(() => {\n        setCheckedWrapper(false);\n    }, [editMode]);\n\n    const onSelectEditModeWrapper = () => {\n        if (doSelectOnEditMode) {\n            onSelect();\n        }\n        setCheckedWrapper(!checked);\n    }\n\n    const setCheckedWrapper = (target: boolean) => {\n        onToggleChecked(target);\n        setChecked(target);\n    };\n\n    const onLongClickWrapper = () => {\n        if (!editMode) {\n            onLongClick();\n        }\n    }\n\n    const mouseEnterAction = () => {\n        setColor(\"#D3D3D3\");\n    };\n\n    const mouseLeaveAction = () => {\n        setColor(\"white\");\n    };\n\n    return (\n        <div onClick={editMode ? onSelectEditModeWrapper : onSelect} onDoubleClick={onLongClickWrapper} style={{ display: \"flex\", flexDirection: \"row\", justifyContent: \"space-between\" }}>\n            <div style={{ display: editMode ? \"flex\" : \"none\", flexDirection: \"column\", justifyContent: \"center\" }}>\n                <Checkbox color={\"primary\"} checked={checked}/>\n            </div>\n            <div style={{ background: changeColorOnMouseHover ? color : \"white\", width: width }} onMouseEnter={mouseEnterAction} onMouseLeave={mouseLeaveAction}>\n                {rowContent}\n            </div>\n        </div>\n    );\n};","import { FunctionComponent } from \"react\";\nimport { IconButton } from \"@material-ui/core\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport EditIcon from \"@material-ui/icons/Edit\";\n\nexport interface IListHeader {\n    title?: string;\n    setEditMode?: (target: boolean) => void;\n    editMode?: boolean;\n    onAddItem?: () => void;\n    onDeleteItem?: () => void;\n}\n\nexport const ListHeader: FunctionComponent<IListHeader> = ({ title, setEditMode, editMode, onAddItem, onDeleteItem }) => {\n    const AddButton = onAddItem ? (\n        <IconButton onClick={onAddItem} style={{ width: 48 }}>\n          <AddIcon/>\n        </IconButton>\n    ) : null;\n\n    const DeleteButton = onDeleteItem && (editMode === true) ? (\n        <IconButton onClick={onDeleteItem} style={{ width: 48 }}>\n          <DeleteIcon/>\n        </IconButton>\n    ) : null;\n\n    const onEditButtonClick = setEditMode && (editMode !== undefined) ? () => {\n        setEditMode(!editMode);\n    } : null;\n\n    const EditButton = onEditButtonClick ? (\n        <IconButton onClick={onEditButtonClick} style={{ width: 48 }}>\n          <EditIcon/>\n        </IconButton>\n    ) : null;\n\n    const Buttons = title ? (\n        <div>\n            {AddButton}\n            {EditButton}\n            {DeleteButton}\n        </div>\n    ) : (\n        <div style={{ display: \"flex\", flexDirection: \"row\", justifyContent: \"space-between\" }}>\n            <div>\n                {AddButton}\n                {EditButton}\n            </div>\n            {DeleteButton}\n        </div>\n    );\n    return (\n        title ? (\n            <div style={{ display: \"flex\", flexDirection: \"row\", justifyContent: \"space-between\" }}>\n                <div style={{ fontSize: 24, fontWeight: \"bold\", marginTop: 12 }}>{title}</div>\n                {Buttons}\n            </div>\n        ) : Buttons\n    );\n}","import { FunctionComponent, useState, useEffect } from \"react\";\nimport { ListHeader, IListHeader, ListRow, IListRow } from \"./component\";\n\ninterface IFlexibleList {\n    hasEditMode?: boolean;\n    changeColorOnHover?: boolean;\n    elements: JSX.Element[];\n    width: number;\n    doSelectOnEditMode?: boolean;\n    onSelect?: (index: number) => () => void;\n    onLongClick?: (index: number) => () => void;\n\n    title?: string;\n    onAddItem?: () => void;\n    onDeleteItem?: (selectedIndex: number[]) => void;\n};\n\nexport const FlexibleList: FunctionComponent<IFlexibleList> = (props) => {\n    const { \n        hasEditMode,\n        changeColorOnHover,\n        elements,\n        width,\n        doSelectOnEditMode,\n        onSelect,\n        onLongClick,\n        title,\n        onAddItem,\n        onDeleteItem,\n    } = props;\n    const [editMode, setEditMode] = useState<boolean>(false);\n    const [checkedIndex, setCheckedIndex] = useState<number[]>([]);\n\n    useEffect(() => {\n        setCheckedIndex([]);\n    }, [editMode]);\n\n    const onToggleChecked = (index: number) => (target: boolean) => {\n        var newState = [...checkedIndex];\n        if (target) {\n            newState.push(index);\n        } else {\n            newState = checkedIndex.filter(element => element !== index);\n        }\n        setCheckedIndex(newState);\n        // console.log(newState);\n    };\n\n    const headerData: IListHeader = {\n        title,\n        setEditMode: hasEditMode ? setEditMode : undefined,\n        editMode: hasEditMode ? editMode : undefined,\n        onAddItem,\n        onDeleteItem: onDeleteItem ? () => { \n            onDeleteItem(checkedIndex);\n            if (checkedIndex.length > 0) {\n                setEditMode(false);\n            }\n        } : undefined,\n    };\n\n    const rowData: IListRow[] = elements.map((value, index) => {\n        return {\n            rowContent: value,\n            editMode: hasEditMode ? editMode : false,\n            changeColorOnMouseHover: changeColorOnHover ?? true,\n            width,\n            doSelectOnEditMode: doSelectOnEditMode ?? true,\n            onSelect: onSelect ? onSelect(index) : (() => {}),\n            onLongClick: onLongClick ? onLongClick(index) : (() => {}),\n            onToggleChecked: onToggleChecked(index),\n        };\n    });\n    const header = <ListHeader { ...headerData }/>\n    const rows = rowData.map((value, index) => <ListRow key={index} { ...value }/>);\n    return (\n        <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n            {header}\n            {rows}\n        </div>\n    );\n};","import { FunctionComponent } from \"react\";\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText } from \"@material-ui/core\";\n\ninterface IAlertDialog {\n    message: string;\n    okButtonLabel: string;\n    cancelButtonLabel?: string;\n    open: boolean;\n    closeDialog: () => void;\n    onSave: () => void;\n}\nexport const AlertDialog: FunctionComponent<IAlertDialog> = ({ message, okButtonLabel, cancelButtonLabel, open, closeDialog, onSave }) => {\n    const onSaveWrapper = () => {\n        onSave();\n        closeDialog();\n    };\n    return (\n        <Dialog open={open} onClose={closeDialog} aria-labelledby=\"form-dialog-title\">\n            <DialogContent>\n                <DialogContentText id=\"alert-dialog-description\">{message}</DialogContentText>\n            </DialogContent>\n            <DialogActions>\n                {cancelButtonLabel ? <Button onClick={closeDialog} color=\"primary\"> {cancelButtonLabel} </Button> : null}\n                <Button onClick={onSaveWrapper} color=\"primary\"> {okButtonLabel} </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}","import { FunctionComponent, useState } from \"react\";\nimport { DialogNewSubject, ItemSubject } from \"../component\";\nimport { dispatch, SubjectActionTypes, useSubjectTitlesSelector } from \"../../redux-components\";\nimport { FlexibleList } from \"../../mod-flexible_list\";\nimport { AlertDialog } from \"../../mod-alert_dialog\";\nimport { useTranslator } from \"../../constants\";\n\nexport interface IColumnSubject {\n    setSelectedIndex: (index: number) => () => void;\n}\n\nexport const ColumnSubject: FunctionComponent<IColumnSubject> = ({ setSelectedIndex }) => {\n    const [checkedIndex, setCheckedIndex] = useState<number[]>([]);\n\n    const [editIndex, setEditIndex] = useState<number>(-1);\n    const [openEditSubject, setOpenEditSubject] = useState<boolean>(false);\n\n    // const [editMode, setEditMode] = useState<boolean>(false);\n    const [openNewSubjectDialog, setOpenNewSubjectDialog] = useState<boolean>(false);\n    const [openSubjectAlertDialog, setOpenSubjectAlertDialog] = useState<boolean>(false);\n    const [openConfirmDeleteDialog, setOpenConfirmDeleteDialog] = useState<boolean>(false);\n    const subjectTitles = useSubjectTitlesSelector();\n\n    const { langT } = useTranslator();\n\n    const handleDelete = (selectedIndex: number[]) => {\n        // console.log(checkedIndex);\n        setCheckedIndex(selectedIndex);\n        if (selectedIndex.length > 0) {\n            setOpenConfirmDeleteDialog(true);\n        } else {\n            setOpenSubjectAlertDialog(true);\n        }\n    }\n\n    const dispatchDelete = () => {\n        dispatch({\n            type: SubjectActionTypes.REMOVE_SUBJECT,\n            value: checkedIndex,\n        });\n    };\n\n    const handleClickOpen = () => {\n        setOpenNewSubjectDialog(true);\n    };\n\n    const handleModifySubject = (index: number) => () => {\n        // console.log(\"Long click index\" + index);\n        setEditIndex(index);\n        setOpenEditSubject(true);\n    };\n\n    const itemSubjects = subjectTitles.map(({ title, index }) => <ItemSubject title={title} key={index}/>);\n    return (\n        <div style={{ display: \"flex\", flexDirection: \"column\", paddingRight: 12 }}>\n            <FlexibleList hasEditMode={true} width={240} elements={itemSubjects} onSelect={setSelectedIndex} onLongClick={handleModifySubject} onAddItem={handleClickOpen} onDeleteItem={handleDelete}/>\n            <DialogNewSubject openDialog={openNewSubjectDialog} closeDialog={() => { setOpenNewSubjectDialog(false) }}/>\n            <DialogNewSubject openDialog={openEditSubject} closeDialog={() => { setOpenEditSubject(false) }} subjectIndex={editIndex}/>\n            <AlertDialog message={langT.ALERT_MESSAGE_SELECT_AT_LEAST_ONE_ITEM_TO_DELETE} okButtonLabel={langT.ALERT_BUTTON_OK} open={openSubjectAlertDialog} closeDialog={ () => { setOpenSubjectAlertDialog(false) } } onSave={() => { setOpenSubjectAlertDialog(false) }}/>\n            <AlertDialog message={langT.ALERT_MESSAGE_CONFIRM_DELETE} okButtonLabel={langT.ALERT_BUTTON_OK} cancelButtonLabel={langT.DIALOG.BUTTON_CANCEL} open={openConfirmDeleteDialog} closeDialog={ () => { setOpenConfirmDeleteDialog(false) }} onSave={dispatchDelete}/>\n        </div>\n    );\n};","import { FunctionComponent, useState } from \"react\";\nimport { DialogNewTask, ItemTask } from \"../component\";\nimport { dispatch, SubjectActionTypes, useSubjectSelector } from \"../../redux-components\";\nimport { useTranslator } from \"../../constants\";\nimport { FlexibleList } from \"../../mod-flexible_list\";\nimport { AlertDialog } from \"../../mod-alert_dialog\";\n\nexport interface IColumnTask {\n    subjectIndex: number;\n}\n\nexport const ColumnTask: FunctionComponent<IColumnTask> = ({ subjectIndex }) => {\n    const [openDialog, setOpenDialog] = useState<boolean>(false);\n    const [openModifyDialog, setOpenModifyDialog] = useState<boolean>(false);\n    const [openSelectedNothing, setOpenSelectedNothing] = useState<boolean>(false);\n    const [openDeleteConfirmation, setOpenDeleteConfirmation] = useState<boolean>(false);\n\n    const [selectedIndex, setSelectedIndex] = useState<number[]>([]);\n    const [modifyIndex, setModifyIndex] = useState<number>(-1);\n\n    const itemTasksData = useSubjectSelector(subjectIndex);\n    const { langT } = useTranslator();\n\n    const itemTasks = itemTasksData ? itemTasksData.items.map((value, index) => <ItemTask key={index} index={index} { ...value }/>) : [];\n\n    const handleClickOpen = () => {\n        setOpenDialog(true);\n    };\n\n    const handleOnDelete = (indexList: number[]) => {\n        setSelectedIndex(indexList);\n        if (indexList.length > 0) {\n            setOpenDeleteConfirmation(true);\n        } else {\n            setOpenSelectedNothing(true);\n        }\n    };\n\n    const dispatchDelete = () => {\n        dispatch({\n            type: SubjectActionTypes.REMOVE_ITEM,\n            value: {\n                index: subjectIndex,\n                itemIndex: selectedIndex,\n            }\n        });\n    }\n\n    const onEditItemAtIndex = (index: number) => () => {\n        setModifyIndex(index);\n        setOpenModifyDialog(true);\n    };\n\n    const columnContent = (\n        <div style={{ display: \"flex\", flexDirection: \"column\", paddingTop: 4, paddingLeft: 12, paddingRight: 12 }}>\n            {itemTasks.length > 0 ? \n                <FlexibleList onSelect={onEditItemAtIndex} title={itemTasksData ? itemTasksData.title : \"\"} hasEditMode={true} doSelectOnEditMode={false} width={360} elements={itemTasks} onAddItem={handleClickOpen} onDeleteItem={handleOnDelete}/> : (\n                <div style={{ display: \"flex\", flexDirection: \"row\", justifyContent: \"center\", fontSize: 20, fontWeight: \"bold\", color: \"gray\" }}>\n                    {langT.MESSAGE_NO_TASK_TO_SHOW}\n                </div>\n            )}\n            <DialogNewTask openDialog={openDialog} closeDialog={() => { setOpenDialog(false) }} subjectIndex={subjectIndex}/>\n            <DialogNewTask openDialog={openModifyDialog} closeDialog={() => { setOpenModifyDialog(false) }} subjectIndex={subjectIndex} taskIndex={modifyIndex}/>\n            <AlertDialog message={langT.ALERT_MESSAGE_SELECT_AT_LEAST_ONE_ITEM_TO_DELETE} okButtonLabel={langT.ALERT_BUTTON_OK} open={openSelectedNothing} closeDialog={() => { setOpenSelectedNothing(false) }} onSave={() => { setOpenSelectedNothing(false) }}/>\n            <AlertDialog message={langT.ALERT_MESSAGE_CONFIRM_DELETE} cancelButtonLabel={langT.DIALOG.BUTTON_CANCEL} okButtonLabel={langT.ALERT_BUTTON_OK} open={openDeleteConfirmation} closeDialog={() => { setOpenDeleteConfirmation(false) }} onSave={dispatchDelete}/>\n        </div>\n    );\n    const emptyPage = (\n        <div>\n            <div style={{ display: \"flex\", flexDirection: \"row\", justifyContent: \"center\", marginTop: 24, fontSize: 20, fontWeight: \"bold\", color: \"gray\" }}>\n                {langT.MESSAGE_NO_SUBJECT_SELECTED}\n            </div>\n        </div>\n    );\n\n    return (\n        <div style={{ width: 360 }}>\n            {itemTasksData ? columnContent : emptyPage}\n        </div>\n    );\n};","import styled from \"styled-components\";\n\nexport const ResultItemBlock = styled.div`\n    display: flex;\n    flex-direction: column;\n`\n\nexport const ResultItemTitle = styled.div`\n    font-size: 30px;\n    font-weight: bold;\n    text-align: center;\n    margin-bottom: 4px;\n`\nexport const ResultItemData = styled.div`\n    font-size: 24px;\n    text-align: center;\n`\ninterface IResultWeight {\n    color: string;\n}\nexport const ResultWeight = styled.div`\n    text-align: center;\n    font-weight: bold;\n    color: ${({ color }: IResultWeight) => (color)};\n`\n","import { FunctionComponent } from \"react\";\nimport { useSubjectSelector, ISubjectItem } from \"../../redux-components\";\nimport { useTranslator } from \"../../constants\";\nimport * as styled from \"./styles\";\n\nexport interface IColumnResult {\n    subjectIndex: number\n}\n\nexport const ColumnResult: FunctionComponent<IColumnResult> = ({ subjectIndex }) => {\n    const subject = useSubjectSelector(subjectIndex);\n    const { langT, colorT } = useTranslator();\n\n    const adjustLength = (data: number): string => {\n        const result = data === 0 ? \"0\" : String(data).length > 5 ? String(data).substring(0, 6) : String(data);\n        return result;\n    };\n\n    const rawSubjectResult = subject?.items.reduce((acc: { totalWeight: number, weightAchieved: number}, item: ISubjectItem) => {\n        const { totalWeight, weightAchieved } = acc;\n        const { points, fullPoints, weight } = item;\n        // console.log(acc);\n        // console.log(item);\n        return { totalWeight: totalWeight + weight, weightAchieved: weightAchieved + (fullPoints > 0 ? points/fullPoints*weight : 0)};\n    }, { totalWeight: 0, weightAchieved: 0});\n\n    const { weightAchieved, totalWeight, highestPossible, percentageLost }: { weightAchieved: string, totalWeight: string, highestPossible: string, percentageLost: string } = \n        { \n            weightAchieved: rawSubjectResult ? adjustLength(rawSubjectResult.weightAchieved): \"0\",\n            totalWeight: rawSubjectResult ? adjustLength(rawSubjectResult.totalWeight) : \"0\",\n            highestPossible: rawSubjectResult ? adjustLength(100-(rawSubjectResult.totalWeight-rawSubjectResult.weightAchieved)) : \"0\",\n            percentageLost: rawSubjectResult ? adjustLength(rawSubjectResult.totalWeight-rawSubjectResult.weightAchieved) : \"0\",\n        };\n\n    const emptyPage = (\n        <div style={{ fontSize: 24, fontWeight: \"bold\", color: \"gray\", textAlign: \"center\" }}>\n            {langT.MESSAGE_NO_RESULT_TO_SHOW}\n        </div>\n    );    \n\n    const resultPage = (\n        <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n            <div style={{ fontSize: 24, fontWeight: \"bold\", marginBottom: 20 }}>{`${langT.TEXT_RESULT}: ${subject?.title}`}</div>\n            <div style={{ display: \"flex\", flexDirection: \"column\", justifyContent: \"space-around\", height: 560 }}>\n                <styled.ResultItemBlock>\n                    <styled.ResultItemTitle>\n                        {langT.TEXT_TOTAL}\n                    </styled.ResultItemTitle>\n                    <styled.ResultItemData>\n                        {`${weightAchieved}/${totalWeight}(%)`}\n                    </styled.ResultItemData>\n                </styled.ResultItemBlock>\n                <div style={{ display: \"flex\", flexDirection: \"row\", justifyContent: \"space-around\" }}>\n                    <styled.ResultItemBlock>\n                        <styled.ResultItemTitle>\n                            {langT.TEXT_HIGHEST_POSSIBLE}\n                        </styled.ResultItemTitle>\n                        <styled.ResultItemData>\n                            {`${highestPossible}%`}\n                        </styled.ResultItemData>\n                    </styled.ResultItemBlock>\n                    <styled.ResultItemBlock>\n                        <styled.ResultItemTitle>\n                            {langT.TEXT_POINTS_LOSG}\n                        </styled.ResultItemTitle>\n                        <styled.ResultItemData>\n                            {`${percentageLost}%`}\n                        </styled.ResultItemData>\n                    </styled.ResultItemBlock>\n                </div>\n                <styled.ResultWeight color={rawSubjectResult?.totalWeight > 100 ? colorT.RED : rawSubjectResult?.totalWeight < 100 ? colorT.YELLOW : colorT.GREEN}>\n                    {`${rawSubjectResult?.totalWeight > 100 ? langT.TEXT_RESULT_OVER : rawSubjectResult?.totalWeight < 100 ? langT.TEXT_RESULT_UNDER : langT.TEXT_RESULT_OK}(${totalWeight}%)`}\n                </styled.ResultWeight>\n            </div>\n        </div>\n    );\n\n    return (\n        <div style={{ paddingTop: 12, paddingLeft: 12, paddingRight: 12, width: \"40vw\" }}>\n            {subject ? resultPage : emptyPage}\n        </div>\n    );\n};\n","import { FunctionComponent, useState } from \"react\";\nimport { ColumnResult, ColumnSubject, ColumnTask } from \"./fragment\";\n\n\n// interface IPageCalculation {\n    \n// }\n\nexport const PageCalculation: FunctionComponent = () => {\n    const [selectedIndex, setSelectedIndex] = useState<number>(-1);\n\n    // const itemSubjects = subjects.map((value, index) => <ItemSubject { ...value } index={index} key={index}/>);\n    // const subjectData = subjects.map((value, index) => ({ title: value.title, index: index }));\n    return(\n        <div style={{ height: \"100vh\", display: \"flex\", flexDirection: \"row\" }}>\n            <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n                <ColumnSubject setSelectedIndex={(index: number) => () => { setSelectedIndex(index) }} />\n                <div style={{ background: \"gray\", height: \"100%\", width: 1 }}/>\n                <ColumnTask {...{ subjectIndex: selectedIndex }}/>\n                <div style={{ background: \"gray\", height: \"100%\", width: 1 }}/>\n                <ColumnResult {...{ subjectIndex: selectedIndex }}/>\n            </div>\n            {/* <ColumnSubject /> */}\n        </div>\n    );\n};","import { FunctionComponent } from \"react\";\nimport { LanguageMenu } from \"../mod-language_menu\";\nimport { Divider } from \"../mod-divider\";\nimport { Button } from \"@material-ui/core\";\nimport { useTranslator } from \"../constants\";\nimport { dispatch, IPage, SetPageTypes } from \"../redux-components\";\nimport { PageCalculation } from \"../page-calculation\";\n\nexport const PageMain: FunctionComponent = () => {\n    const { langT } = useTranslator();\n\n    const setPage = (page: IPage) => () => dispatch(\n        {\n            type: SetPageTypes.SET_PAGE,\n            value: page,\n        }\n    );\n\n    return (\n        <div style={{ margin: 20, marginTop: 10,  display: \"flex\", flexDirection: \"column\" }}>\n            <div style={{ marginBottom: 4, display: \"flex\", justifyContent: \"space-between\" }}>\n                <div style={{ display: \"flex\" }}>\n                    <Button variant=\"outlined\" onClick={setPage(IPage.CALCULATION)} children={langT.BUTTON.CALCULATION} color={\"default\"} style={{margin: 10, background: \"#774ABC\", color: \"#FFFFFF\"}}/>\n                    <Button onClick={setPage(IPage.TERM)} children={langT.BUTTON.TERM} color={\"default\"} style={{margin: 10, background: \"#774ABC\", color: \"#FFFFFF\"}}/>\n                    <Button onClick={setPage(IPage.HISTORY)} children={langT.BUTTON.HISTORY} color={\"default\"} style={{margin: 10, background: \"#774ABC\", color: \"#FFFFFF\"}}/>\n                </div>\n                <LanguageMenu/>\n            </div>\n            <div style={{ marginBottom: 4 }}>\n                <Divider/>\n            </div>\n            <PageCalculation/>\n        </div>\n        \n    );\n};","import React from 'react';\n// import logo from './logo.svg';\nimport './App.css';\n\nimport { PageTest } from \"./page-test\";\nimport { PageMain } from \"./page-main\";\nimport { FlexibleList } from \"./mod-flexible_list\";\n\n\nfunction App() {\n  return (\n    <div style={{ height: \"100vh\" }}>\n      <PageMain/>\n      {/* <PageTest/> */}\n    </div>\n    // <PageTest/>\n    // <div style={{ background: \"red\", height: \"100vh\" }}>\n    //   NOTHING TO SHOW\n    // </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from \"react-redux\";\nimport { ChangeValueTypes, IChangeValue, ILogged, LoggedTypes, store } from \"./redux-components\";\n// import { Action } from 'redux';\n\n// STORE -> GLOBALIZED STATE\n\n// ACTION INCREMENT\nconst increment: () => IChangeValue = () => {\n  return {\n    type: ChangeValueTypes.Increment,\n    value: 1\n  }\n};\n\nconst decrement: () => IChangeValue = () => {\n  return {\n    type: ChangeValueTypes.Decrement,\n    value: 2\n  }\n};\n\nconst signin: () => ILogged = () => {\n  return {\n    type: LoggedTypes.SIGN_IN,\n  }\n}\n\nconst signout: () => ILogged = () => {\n  return {\n    type: LoggedTypes.SIGN_OUT,\n  }\n}\n\n\n// REDUCER\n\nstore.subscribe(() => console.log(store.getState()));\n\n// DISPATCH\nstore.dispatch(decrement());\nstore.dispatch(increment());\nstore.dispatch(decrement());\nstore.dispatch(signin());\nstore.dispatch(signout());\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider> ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export type IActionType = IChangeValue | ILogged | ISetLanguage | ISetPage | ISubjectActions;\n\nexport interface IChangeValue {\n    type: ChangeValueTypes;\n    value: number;\n};\n\nexport enum ChangeValueTypes {\n    Increment = \"INCREMENT\",\n    Decrement = \"DECREMENT\",\n};\n\nexport interface ILogged {\n    type: LoggedTypes;\n}\n\nexport enum LoggedTypes {\n    SIGN_IN = \"SIGN_IN\",\n    SIGN_OUT = \"SIGN_OUT\",\n}\n\nexport interface ISetLanguage {\n    type: SetLanguageTypes;\n    value: ILanguage;\n}\n\nexport enum SetLanguageTypes {\n    SET_LANGUAGE = \"SET_LANGUAGE\",\n}\n\nexport enum ILanguage {\n    EN = \"English\",\n    CN_SI = \"Chinese_Simplified\",\n    CN_TR = \"Chinese_Traditional\",\n    JP = \"Japanese\",\n}\n\nexport interface ISetPage {\n    type: SetPageTypes,\n    value: IPage,\n}\n\nexport enum SetPageTypes {\n    SET_PAGE = \"SET_PAGE\",\n}\n\nexport enum IPage {\n    CALCULATION = \"CALCULATION\",\n    TERM = \"TERM\",\n    HISTORY = \"HISTORY\",\n}\n\nexport type ISubjectActions = IAddSubject | IRemoveSubject | IAddItem | IRemoveItem | IModifyItem | IModifySubject;\n\nexport interface IAddSubject {\n    type: SubjectActionTypes.ADD_SUBJECT;\n    value: ISubject;\n}\n\nexport interface IRemoveSubject {\n    type: SubjectActionTypes.REMOVE_SUBJECT;\n    value: number[];\n}\n\nexport interface IModifySubject {\n    type: SubjectActionTypes.MODIFY_SUBJECT;\n    value: {\n        subjectIndex: number;\n        newTitle: string;\n    };\n}\n\nexport interface IAddItem {\n    type: SubjectActionTypes.ADD_ITEM;\n    value: {\n        index: number;\n        item: ISubjectItem;\n    };\n}\n\nexport interface IRemoveItem {\n    type: SubjectActionTypes.REMOVE_ITEM;\n    value: {\n        index: number;\n        itemIndex: number[];\n    };\n}\n\nexport interface IModifyItem {\n    type: SubjectActionTypes.MODIFY_ITEM;\n    value: {\n        index: number;\n        itemIndex: number;\n        newItem: ISubjectItem;\n    };\n}\n\nexport enum SubjectActionTypes {\n    ADD_SUBJECT = \"ADD_SUBJECT\",\n    REMOVE_SUBJECT = \"REMOVE_SUBJECT\",\n    MODIFY_SUBJECT = \"MODIFY_SUBJECT\",\n    ADD_ITEM = \"ADD_ITEM\",\n    REMOVE_ITEM = \"REMOVE_ITEM\",\n    MODIFY_ITEM = \"MODIFY_ITEM\",\n}\n\nexport interface ISubject {\n    title: string,\n    items: ISubjectItem[],\n}\n\nexport interface ISubjectItem {\n    title: string,\n    points: number,\n    fullPoints: number,\n    weight: number,\n}\n\n","export * from \"./store\";\nexport * from \"./actions\";\nexport * from \"./selectors\";\n","import { createStore, Store } from \"redux\";\nimport { combinedReducers } from \"../reducers\";\nimport { IActionType } from \"../actions\";\nimport { IStateType } from \"./types\";\n\nexport let store: Store<IStateType, IActionType> = createStore(combinedReducers, (window as any).__REDUX_DEVTOOLS_EXTENSION__ && (window as any).__REDUX_DEVTOOLS_EXTENSION__());\n\nexport const dispatch = (action: IActionType) => store.dispatch(action);\n\nexport * from \"./types\";","import { useSelector } from \"react-redux\";\nimport { IStateType } from \"../store\";\n\nexport const useValueSelector = () => useSelector((state: IStateType) => state.value);\n\nexport const useIsLoggedSelector = () => useSelector((state: IStateType) => state.isLogged);\n\nexport const useLanguageSelector = () => useSelector((state: IStateType) => state.language);\n\nexport const usePageSelector = () => useSelector((state: IStateType) => state.page);\n\nexport const useSubjectsSelector = () => useSelector((state: IStateType) => state.subjects);\n\nexport const useSubjectSelector = (index: number) => useSubjectsSelector()[index]; //useSelector((state: IStateType) => index < 0 ? null : state.subjects[index]);\n\nexport const useSubjectTitlesSelector = () => useSelector((state: IStateType) => state.subjects.map((value, index) => ({ title: value.title, index: index })));\n\nexport const useSubjectTitleSelector = (index: number) => useSelector((state: IStateType) => index > -1 ? state.subjects[index].title : undefined);\n\nexport const useTaskSelector = (subjectIndex: number, taskIndex: number) => useSelector((state: IStateType) => taskIndex > -1 ? state.subjects[subjectIndex].items[taskIndex] : undefined);\n","import { Reducer } from \"redux\";\nimport { ISetLanguage, SetLanguageTypes } from \"../actions\";\nimport { ILanguage } from \"../actions\";\n\nconst initialState: ILanguage = ILanguage.EN;\n\nexport const setLanguageReducer: Reducer<ILanguage, ISetLanguage> = (oldState = initialState, action) => {\n    let { value, type } = action;\n    switch (type) {\n        case SetLanguageTypes.SET_LANGUAGE:\n            return value;\n        default:\n            return oldState;\n  }\n};","import { Reducer } from \"redux\";\nimport { IPage, ISetPage, SetPageTypes } from \"../actions\";\n\nconst initialState: IPage = IPage.CALCULATION;\n\nexport const setPageReducer: Reducer<IPage, ISetPage> = (oldState = initialState, action) => {\n    let { value, type } = action;\n    switch (type) {\n        case SetPageTypes.SET_PAGE:\n            return value;\n        default:\n            return oldState;\n  }\n};","import { Reducer } from \"redux\";\nimport { SubjectActionTypes, ISubjectActions, ISubjectItem, ISubject } from \"../actions\";\n\nconst initialState: ISubject[] = [\n    {\n        title: \"CS 135\",\n        items: [\n            {\n                title: \"Assignment 1\",\n                points: 20.0,\n                fullPoints: 25.0,\n                weight: 10.0,\n            },\n            {\n                title: \"Assignment 2\",\n                points: 17.222222,\n                fullPoints: 25.0,\n                weight: 10.0,\n            },\n            {\n                title: \"Assignment 3\",\n                points: 23,\n                fullPoints: 25.0,\n                weight: 10.0,\n            },\n            {\n                title: \"Midterm\",\n                points: 36,\n                fullPoints: 40,\n                weight: 30\n            },\n            {\n                title: \"Final\",\n                points: 79,\n                fullPoints: 100,\n                weight: 40,\n            },\n        ],\n    },\n    {\n        title: \"CS 136\",\n        items: [\n            {\n                title: \"Assignment 1\",\n                points: 20.0,\n                fullPoints: 25.0,\n                weight: 10.0,\n            },\n            {\n                title: \"Assignment 2\",\n                points: 17.222222,\n                fullPoints: 25.0,\n                weight: 10.0,\n            },\n            {\n                title: \"Assignment 3\",\n                points: 23,\n                fullPoints: 25.0,\n                weight: 10.0,\n            },\n            {\n                title: \"Midterm\",\n                points: 36,\n                fullPoints: 40,\n                weight: 30\n            },\n        ],\n    },\n    {\n        title: \"CS 240\",\n        items: [],\n    }\n];\n\nexport const modifySubjectsReducer: Reducer<ISubject[], ISubjectActions> = (oldState = initialState, action) => {\n    let { value, type } = action;\n    var actionValue = value;\n    var newState = [ ...oldState ];\n    switch (type) {\n      case SubjectActionTypes.ADD_SUBJECT:\n        newState.push(value as ISubject);\n        return newState;\n      case SubjectActionTypes.REMOVE_SUBJECT:\n        actionValue = (value as number[]).sort((a, b) => {\n            if (a < b) {\n                return 1;\n            } else if (a > b) {\n                return -1;\n            } else {\n                return 0;\n            }\n        });\n        // newState = oldState.filter(subject => subject.title !== value.subject!.title);\n        actionValue.forEach((value) => {\n            oldState.splice(value, 1);\n        });\n        newState = [...oldState];\n        return newState;\n      case SubjectActionTypes.MODIFY_SUBJECT:\n        actionValue = value as { subjectIndex: number, newTitle: string };\n        newState[actionValue.subjectIndex].title = actionValue.newTitle;\n        return newState;\n      case SubjectActionTypes.ADD_ITEM:\n        const { index, item } = value as { index: number, item: ISubjectItem };\n        newState[index].items.push(item);\n        return newState;\n      case SubjectActionTypes.REMOVE_ITEM:\n        const { index: subjectIndex, itemIndex } = value as { index: number, itemIndex: number[] };\n        const selectedIndex = itemIndex.sort((a, b) => {\n            if (a < b) {\n                return 1;\n            } else if (a > b) {\n                return -1;\n            } else {\n                return 0;\n            }\n        });\n        newState = [...oldState]\n        selectedIndex.forEach((value) => {\n            newState[subjectIndex].items.splice(value, 1);\n        });\n        return newState;\n      case SubjectActionTypes.MODIFY_ITEM:\n        actionValue = value as { index: number, itemIndex: number, newItem: ISubjectItem };\n        newState[actionValue.index].items[actionValue.itemIndex] = actionValue.newItem;\n        return newState;\n      default:\n        return oldState;\n    }\n  };","import { counterReducer } from \"./counterReducer\";\nimport { isLoggedReducer } from \"./isLoggedReducer\";\nimport { setLanguageReducer } from \"./setLanguageReducer\";\nimport { setPageReducer } from \"./setPageReducer\";\nimport { modifySubjectsReducer } from \"./modifySubjectsReducer\";\nimport { combineReducers } from \"redux\";\nimport { IStateType } from \"../store\";\n\nexport const combinedReducers = combineReducers<IStateType>({\n    value: counterReducer,\n    isLogged: isLoggedReducer,\n    language: setLanguageReducer,\n    page: setPageReducer,\n    subjects: modifySubjectsReducer,\n});\n\nexport * from \"./counterReducer\";\nexport * from \"./isLoggedReducer\";\n","import { Reducer } from \"redux\";\nimport { IChangeValue, ChangeValueTypes } from \"../actions\";\n\nconst initialState: number = -1\n\nexport const counterReducer: Reducer<number, IChangeValue> = (oldState = initialState, action) => {\n    let { value, type } = action;\n    switch (type) {\n      case ChangeValueTypes.Increment:\n        return oldState += value;\n      case ChangeValueTypes.Decrement:\n        return oldState -= value;\n      default:\n        return oldState;\n    }\n  };","import { Reducer } from \"redux\";\nimport { ILogged, LoggedTypes } from \"../actions\";\n\nconst initialState: boolean = false;\n\nexport const isLoggedReducer: Reducer<boolean, ILogged> = (oldState = initialState, action) => {\n  switch (action.type) {\n    case LoggedTypes.SIGN_IN:\n      return true;\n    case LoggedTypes.SIGN_OUT:\n      return false;\n    default:\n      return oldState;\n  }\n};"],"sourceRoot":""}